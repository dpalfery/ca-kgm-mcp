name: PR Validation

on:
  pull_request:
    branches:
      - develop
      - main
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      - name: Build package
        run: npm run build

      - name: Check bundle size
        run: |
          SIZE=$(stat -c%s "dist/index.js" 2>/dev/null || stat -f%z "dist/index.js" 2>/dev/null || echo "unknown")
          echo "üì¶ Bundle size: $SIZE bytes"
          if [ "$SIZE" -gt 5242880 ]; then
            echo "‚ö†Ô∏è  Warning: Bundle size exceeds 5MB"
            exit 1
          fi

      - name: Generate coverage report
        run: npm run test:unit -- --coverage
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

      - name: Comment PR with results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const buildStatus = '${{ job.status }}';
            const nodeVersion = '${{ matrix.node-version }}';
            
            const comment = buildStatus === 'success' 
              ? `‚úÖ **Build successful for Node.js ${nodeVersion}**\n- Linting: ‚úì\n- Tests: ‚úì\n- Build: ‚úì`
              : `‚ùå **Build failed for Node.js ${nodeVersion}**\n- Check workflow logs for details`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
